{"version":3,"sources":["images/pikachu_catch.gif","images/pikachu_loading.gif","Components/Header.js","Components/Filters.js","Components/CharacterCard.js","Components/NoPokemon.js","Components/CharactersList.js","Components/Footer.js","Components/Main.js","Components/LoadingPage.js","Components/Detail.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Component","Filters","_this$props","this","props","handleSearch","searchValue","htmlFor","id","type","name","onChange","value","placeholder","CharacterCard","pokemonData","react","src","photo","alt","types","map","index","key","evolutions","NoPokemon","pikachuCatch","CharactersList","pokemonList","length","Link","to","concat","Components_CharacterCard","Components_NoPokemon","Footer","Main","Components_Header","Components_Filters","Components_CharactersList","Components_Footer","LoadingPage","pikachuLoading","Detail","pokemonToPrint","match","params","localStorage","setItem","JSON","stringify","parse","getItem","_pokemonToPrint","abilities","height","images","weight","react_transition_group","transitionName","transitionAppear","transitionAppearTimeout","transitionLeaveTimeout","ability","evolution","image","arrayPokemons","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filteredList","fetchData","bind","assertThisInitialized","selectListToPrint","saveDataInState","saveDataInLocalStorage","listFromLocalStorage","console","log","setState","i","url","_this2","fetch","then","response","json","sprites","front_default","push","back_default","front_shiny","back_shiny","species","evolution_chain","evolution0","chain","undefined","evolves_to","evolution1","evolution2","e","search","target","toLowerCase","filter","pokemon","includes","_this$state","_this3","Switch","Route","exact","path","render","Components_Main","Components_LoadingPage","Components_Detail","ReactDOM","HashRouter","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c59a84e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikachu_catch.9a2724ba.gif\";","module.exports = __webpack_public_path__ + \"static/media/pikachu_loading.3aa872f8.gif\";","import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() { \n        return ( \n            <div className=\"headerContainer\">\n                <div className=\"pikachuLeftEar\"></div>\n                <div className=\"pikachuRightEar\"></div>\n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filters extends Component {\n    render() {\n        const {\n            handleSearch,\n            searchValue,\n        } = this.props;\n\n        return (\n            <div>\n                <label htmlFor=\"pokeSearch\" />\n                <input\n                    id=\"pokeSearch\"\n                    type=\"text\"\n                    name=\"pokemonName\"\n                    onChange={handleSearch}\n                    value={searchValue}\n                    placeholder=\"Filter pokemon by name...\"\n                    className=\"inputFilter\"\n                />\n            </div>\n        );\n    };\n};\n\nFilters.propTypes = {\n    handleSearch: PropTypes.func,\n    searchValue: PropTypes.string\n};\n\nexport default Filters;","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CharacterCard extends Component {\n    render() {\n        const {\n            pokemonData,\n        } = this.props;\n        return (\n            <Fragment>\n                <div className='imageIdContainer'>\n\n                    <img\n                        className='imagePokemon'\n                        src={pokemonData.photo}\n                        alt={pokemonData.name}\n                    />\n\n                    <div className='idContainer'>\n                        <p className='pokemonId'>ID / {pokemonData.id}</p>\n                    </div>\n                </div>\n                <div className='nameTypeContainer'>\n                    <p className='pokemonName'>{pokemonData.name}</p>\n                    <div className='pokemonTypeList'>\n                        {pokemonData.types.map((type, index) => {\n                            return <li key={index}>\n                                <p className={type}>{type}</p>\n                            </li>\n                        })\n                        }\n                    </div>\n                    {pokemonData.name !== pokemonData.evolutions[0]\n                        ? <div className=\"evolution\">\n                            <p className=\"pokemonEvolutionTitle\">Evolves from:</p>\n                            <p className=\"pokemonEvolution\">{pokemonData.evolutions[0]}</p>\n                        </div>\n                        : <div className=\"evolutionEmpty\"></div>\n                    }\n                </div>\n            </Fragment>\n        );\n    };\n};\n\nCharacterCard.propTypes = {\n    pokemonData: PropTypes.object,\n};\n\nexport default CharacterCard;","import React, { Component } from 'react';\nimport pikachuCatch from '../images/pikachu_catch.gif';\n\nclass NoPokemon extends Component {\n    render() { \n        return ( \n            <div className=\"noPokemonContainer\">\n                <img className=\"catchPokemon\" src={pikachuCatch} alt=\"No pokemon to show\"/>\n                <h1 className=\"noPokemonMessage\">You don't have a pokemon named {this.props.searchValue}...</h1>\n                <h2 className=\"noPokemonMessage2\">Catch it!</h2>\n            </div>\n         );\n    }\n}\n \nexport default NoPokemon;","import React, { Component } from 'react';\nimport CharacterCard from './CharacterCard.js';\nimport NoPokemon from './NoPokemon.js';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass CharactersList extends Component {\n    render() {\n        const { \n            pokemonList, \n            searchValue,\n        } = this.props;\n\n        return pokemonList().length > 0\n            ? <div className=\"pokemonContainer\">\n                <ul className=\"pokemonList\">\n                    {\n                        pokemonList().map((pokemonData) => {\n                            return( \n                            <Link \n                                className=\"linkToDetail\" \n                                to={`/pokemon/${pokemonData.id}`}\n                            >\n                                <li className=\"pokemonCard\" key={pokemonData.id}>\n                                <CharacterCard \n                                    pokemonData={pokemonData} />\n                                </li>\n                            </Link>\n                            );\n                        })\n                    }\n                </ul>\n            </div>\n        : <NoPokemon searchValue = {searchValue}/>\n    };\n};\n\nCharactersList.propTypes = {\n    pokemonList: PropTypes.func,\n};\n\nexport default CharactersList;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() { \n        return ( \n            <div className=\"footerContainer\">\n                <div className=\"flexFooterContainer\">\n                    <div className=\"pikachuCheekLeft\"></div>\n                    <div className=\"pikachuCheekRight\"></div>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharactersList from './CharactersList';\nimport Footer from './Footer';\nimport PropTypes from 'prop-types';\n\nclass Main extends Component {\n    render() { \n        const {\n            handleSearch,\n            pokemonList, \n            searchValue,\n        } = this.props;\n        \n        return ( \n            <div className=\"App\">\n                <Header/>\n                <h1 className='appTitle'>Pokemon Searcher</h1>\n                <Filters \n                    handleSearch={handleSearch} \n                    searchValue = {searchValue}/>\n                <CharactersList \n                    pokemonList={pokemonList}\n                    searchValue = {searchValue}/>\n                <Footer/>\n            </div>\n         );\n    };\n};\n \nMain.propTypes = {\n    handleSearch: PropTypes.func,\n    pokemonList: PropTypes.func,\n    searchValue: PropTypes.string\n};\n\nexport default Main;","import React, { Component } from 'react';\nimport pikachuLoading from '../images/pikachu_loading.gif';\n\nclass LoadingPage extends Component {\n    render() {\n        return (\n            <div className='containerLoadingPikachu'>\n                <img\n                    src={pikachuLoading}\n                    alt=\"Loading page...\"\n                />\n            </div>\n        );\n    };\n};\n\nexport default LoadingPage;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { CSSTransitionGroup } from 'react-transition-group'\n\nclass Detail extends Component {\n    render() {\n        const { id } = this.props.match.params;\n        const { pokemonList } = this.props;\n        let pokemonToPrint;\n        if (pokemonList.length !== 0) {\n            pokemonToPrint = pokemonList[id - 1];\n            localStorage.setItem('pokemonPrinted', JSON.stringify(pokemonToPrint));\n        } else {\n            const pokemonSaved = JSON.parse(localStorage.getItem('pokemonPrinted'))\n            pokemonToPrint = pokemonSaved;\n        }\n        const {\n            abilities,\n            evolutions,\n            height,\n            images,\n            name,\n            photo,\n            types,\n            weight,\n        } = pokemonToPrint;\n\n        return (\n            <div className=\"pokemonDataContainer\">\n                <div className=\"pokemonCardDetail\">\n                    <div className=\"pokeNameContainer\">\n                        <h1 className=\"titlePokemon\">{name}</h1>\n                    </div>\n                    <div className=\"photoAndDataContainer\">\n                        <div className=\"photoAndTypeContainer\">\n                            <div className=\"photoContainerDetail\">\n                                <CSSTransitionGroup\n                                    transitionName=\"pokeTransition\"\n                                    transitionAppear={true}\n                                    transitionAppearTimeout={1000}\n                                    transitionLeaveTimeout={false}\n                                >\n                                    <img src={photo} alt={name} />\n                                </CSSTransitionGroup>\n                            </div>\n                            <div className=\"typeContainerDetail\">\n                                <ul className=\"listTypesDetails\">\n                                    {types.map(type => {\n                                        return (\n                                            <p className={`typeDetails ${type}`}>{type}</p>\n                                        );\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"allDataContainer\">\n                            <CSSTransitionGroup\n                                transitionName=\"pokeTitleTransition\"\n                                transitionAppear={true}\n                                transitionAppearTimeout={1500}\n                            >\n                                <h2 className=\"dataTitleDetail\">Characteristics</h2>\n                            </CSSTransitionGroup>\n                            <ul className=\"listCharacteristicsDetails\">\n                                <li>\n                                    <p className=\"characteristicTitle\">Height:</p>\n                                    <p>{height}</p>\n                                </li>\n                                <li>\n                                    <p className=\"characteristicTitle\">Weight:</p>\n                                    <p className=\"characteristicData\">{weight}</p>\n                                </li>\n                            </ul>\n                            <CSSTransitionGroup\n                                transitionName=\"pokeTitleTransition\"\n                                transitionAppear={true}\n                                transitionAppearTimeout={1500}\n                            >\n                                <h2 className=\"dataTitleDetail\">Abilities</h2>\n                            </CSSTransitionGroup>\n                            <ul className=\"listAbilitiesDetail\">\n                                {abilities.map(ability => {\n                                    return (\n                                        <p className=\"abilityDetail\">{ability}</p>\n                                    );\n                                })}\n                            </ul>\n                        </div>\n                    </div>\n                    <div>\n                        <h2 className=\"bigTitle\">Evolutions</h2>\n                        <ul className=\"listEvolutionsDetail\">\n                            {evolutions.map(evolution => {\n                                return (\n                                    <p className=\"evolutionDetail\">{evolution}</p>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    <div>\n                        <CSSTransitionGroup\n                            transitionName=\"pokeImagesTransition\"\n                            transitionAppear={true}\n                            transitionAppearTimeout={2500}\n                        >\n                            <h2 className=\"bigTitle\">Images</h2>\n                            <ul className=\"imagesContainerDetail\">\n                                {images.map(image => {\n                                    return (\n\n                                        <img src={image} alt={name} />\n\n                                    );\n                                })}\n                            </ul>\n                        </CSSTransitionGroup>\n                    </div>\n                    <div className=\"containerButtonBackDetail\">\n                        <Link\n                            className=\"linkToLanding\"\n                            to={'/'}\n                        >\n                            <button className=\"buttonBack\">Back to PokeList</button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Detail;","import React, { Component } from \"react\";\nimport Main from \"./Main\";\nimport LoadingPage from \"./LoadingPage\";\nimport Detail from \"./Detail\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst arrayPokemons = [];\nconst numberPokemonToSearch = 25;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonList: [],\n      filteredList: [],\n      searchValue: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.selectListToPrint = this.selectListToPrint.bind(this);\n    this.saveDataInState = this.saveDataInState.bind(this);\n    this.saveDataInLocalStorage = this.saveDataInLocalStorage.bind(this);\n  }\n\n  //1. Rescatar datos de LS (si hay) o preparar llamada a la API\n\n  componentDidMount() {\n    const listFromLocalStorage = JSON.parse(\n      localStorage.getItem(\"pokemon-list\")\n    );\n    if (listFromLocalStorage) {\n      console.log(\"LS\");\n      this.setState({\n        pokemonList: listFromLocalStorage\n      });\n    } else {\n      const URL = \"https://pokeapi.co/api/v2/pokemon/\";\n      for (let i = 0; i < numberPokemonToSearch; i++) {\n        this.fetchData(`${URL}${i + 1}/`, i);\n      };\n    };\n  };\n\n  // 2. Llamada a la API y construcción de objeto con datos de pokemon.\n\n  fetchData(url, i) {\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        //Meter datos básicos del pokemon en arrayPokemons.\n\n        arrayPokemons[i] = {\n          id: json.id,\n          name: json.name,\n          photo: json.sprites.front_default,\n          height: json.height,\n          weight: json.weight,\n          types: [],\n          abilities: [],\n          images: [],\n          evolutions: []\n        };\n\n        //Meter tipos\n\n        json.types.map(type => arrayPokemons[i].types.push(type.type.name));\n\n        //Meter habilidades\n\n        json.abilities.map(ability =>\n          arrayPokemons[i].abilities.push(ability.ability.name)\n        );\n\n        //Meter imágenes\n\n        arrayPokemons[i].images.push(\n          json.sprites.front_default,\n          json.sprites.back_default,\n          json.sprites.front_shiny,\n          json.sprites.back_shiny\n        );\n\n        // Meter evoluciones\n\n        fetch(json.species.url)\n          .then(response => response.json())\n          .then(json => {\n            fetch(json.evolution_chain.url)\n              .then(response => response.json())\n              .then(json => {\n                const evolution0 = json.chain.species.name;\n                arrayPokemons[i].evolutions.push(evolution0);\n                if (json.chain.evolves_to[0] !== undefined) {\n                  const evolution1 = json.chain.evolves_to[0].species.name;\n                  arrayPokemons[i].evolutions.push(evolution1);\n                }\n                if (json.chain.evolves_to[0].evolves_to[0] !== undefined) {\n                  const evolution2 =\n                    json.chain.evolves_to[0].evolves_to[0].species.name;\n                  arrayPokemons[i].evolutions.push(evolution2);\n                }\n                this.saveDataInState();\n              });\n          });\n      });\n  }\n\n  //3. Meter datos de la API en el estado\n\n  saveDataInState() {\n    this.setState(\n      {\n        pokemonList: arrayPokemons\n      },\n      this.saveDataInLocalStorage()\n    );\n  }\n\n  //4. Guardar datos en el Local Storage\n\n  saveDataInLocalStorage() {\n    localStorage.setItem(\"pokemon-list\", JSON.stringify(arrayPokemons));\n  }\n\n  //5. Controlar el evento del input: cuando escribes, se filtra la lista de pokemon inicial y los filtrados se meten en el array filteredList del estado.\n\n  handleSearch(e) {\n    const search = e.target.value.toLowerCase();\n    this.setState({\n      searchValue: search,\n      filteredList: this.state.pokemonList.filter(pokemon => {\n        return pokemon.name.includes(search);\n      })\n    });\n  }\n\n  //6. Seleccinar la lista de pokemon que renderizar: la inicial o la filtrada\n\n  selectListToPrint() {\n    const { filteredList, pokemonList, searchValue } = this.state;\n    return !searchValue ? pokemonList : filteredList;\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return this.state.pokemonList.length === numberPokemonToSearch \n            ? <Main\n                handleSearch={this.handleSearch}\n                pokemonList={this.selectListToPrint}\n                searchValue={this.state.searchValue}\n              /> \n            : <LoadingPage />;\n          }}\n        />\n        <Route\n          path=\"/pokemon/:id\"\n          render={props => (\n            <Detail match={props.match} pokemonList={this.state.pokemonList} />\n          )}\n        />\n      </Switch>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './Components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}